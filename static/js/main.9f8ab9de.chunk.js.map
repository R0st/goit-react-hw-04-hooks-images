{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","searchApi.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","webformatURL","onClick","tags","id","src","alt","ImageGallery","hits","onOpenModal","map","largeImageURL","Button","LoaderSpin","color","height","width","timeout","fetchHits","searchQuery","currentPage","axios","get","then","response","data","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","props","onClose","handleBackdropClick","target","window","addEventListener","this","removeEventListener","createPortal","children","Component","App","setHits","setSearchQuery","setCurrentPage","isLoading","setIsLoading","showModal","setShowModal","setTags","setLargeImageURL","error","setError","useEffect","options","searchApi","prevState","catch","finally","toogleModal","scrollTo","top","documentElement","scrollHeight","behavior","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9f8ab9de.chunk.js","sourcesContent":["import{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n    \r\n    const [query, setQuery] = useState('');\r\n    \r\n    const handleChange = e => {\r\n        setQuery(e.currentTarget.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (query.trim() === '') {\r\n            alert('Введите название картинки');\r\n            return;\r\n        } \r\n        onSubmit(query);\r\n        setQuery('');\r\n    };\r\n    \r\n    return (\r\n        <header className=\"Searchbar\" >\r\n                <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={query}\r\n                        onChange={handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n    )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n        query: PropTypes.string,\r\n    };\r\n// export default class Searchbar extends Component {\r\n//     static propTypes = {\r\n//         query: PropTypes.string,\r\n//     };\r\n    \r\n//     state = {\r\n//         query: '',\r\n//     };\r\n\r\n//     handleChange = e => {\r\n//         this.setState({ query: e.currentTarget.value });\r\n//     };\r\n\r\n//     handleSubmit = e => {\r\n//         e.preventDefault();\r\n\r\n//         if (this.state.query.trim() === '') {\r\n//             alert('Введите название картинки');\r\n//             return;\r\n//         } \r\n//         this.props.onSubmit(this.state.query);\r\n//         this.setState({ query: '' });\r\n//     };\r\n\r\n//     render() {\r\n//         const { query } = this.state;\r\n//         return (\r\n//             <header className=\"Searchbar\" >\r\n//                 <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n//                     <button type=\"submit\" className=\"SearchForm-button\">\r\n//                         <span className=\"SearchForm-button-label\">Search</span>\r\n//                     </button>\r\n\r\n//                     <input\r\n//                         className=\"SearchForm-input\"\r\n//                         type=\"text\"\r\n//                         autoComplete=\"off\"\r\n//                         autoFocus\r\n//                         placeholder=\"Search images and photos\"\r\n//                         value={query}\r\n//                         onChange={this.handleChange}\r\n//                     />\r\n//                 </form>\r\n//             </header>\r\n//         )\r\n//     }\r\n// }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nexport default function ImageGalleryItem({ webformatURL, onClick, tags, id }) {\r\n    return (\r\n        <li key={id}>\r\n            <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            className=\"ImageGalleryItem-image\"\r\n            onClick={onClick}\r\n            />\r\n        </li>\r\n        \r\n    )}\r\n        \r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n    id: PropTypes.number,\r\n};","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nconst ImageGallery = ({ hits, onOpenModal }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(({ id, webformatURL, largeImageURL }) => {\r\n                const handleImgClick = () => onOpenModal(largeImageURL);\r\n                return (\r\n                    // <li key={id}>\r\n                        <ImageGalleryItem\r\n                            key={id}\r\n                            webformatURL={webformatURL}\r\n                            onClick={handleImgClick}\r\n                        />\r\n                    // </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.array.isRequired,\r\n    onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","// import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import style from './Button.module.css'\r\n\r\n// const Button = ({ children, onClick, ...allyProps }) => {\r\n//     <button\r\n//         type='button'\r\n//         className={style.Button}\r\n//         onClick={onClick} {...allyProps}\r\n//     >\r\n//         {children}\r\n//     </button>\r\n// };\r\n\r\n// Button.defaultProps = {\r\n//     onClick: () => null,\r\n//     children: null,\r\n// };\r\n\r\n// Button.propTypes = {\r\n//     onClick: PropTypes.func,\r\n//     children: PropTypes.node,\r\n//     'aria-label': PropTypes.string.isRequired,\r\n// };\r\n\r\n// export default Button;\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n        Load more\r\n    </button>\r\n    );\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LoaderSpin = () => (\r\n    <Loader\r\n        type=\"Bars\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n    />\r\n)\r\n\r\nexport default LoaderSpin;\r\n","// import searchApi from '../components/searchApi' \r\n\r\n// function fetchImg({ searchQuery = \"\", currentPage = 1 }) {\r\n\r\n        // const BASE_URL = 'https://pixabay.com/api/';\r\n        // const API_KEY = '21793767-b218360da72fb262d25a858fe';\r\n        // const PER_PAGE = 12;\r\n    \r\n//     return fetch(`${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=\r\n//                       ${currentPage}&per_page=${PER_PAGE}&key=${API_KEY}`)\r\n                \r\n//                 .then(response => {\r\n//                     if (response.ok) {\r\n//                         return response.json()\r\n//                     }\r\n//                     return Promise.reject(\r\n//                         new Error(`Повторите запрос ${searchQuery}`))\r\n//                 })\r\n// }\r\n// const api = {\r\n//     fetchImg}\r\n// export default  api ;\r\n// export default { fetchImg } ;\r\n\r\n// import axios from 'axios';\r\n\r\n// const fetchHits = ({ searchQuery = '', currentPage = 1 }) => {\r\n//     const BASE_URL = 'https://pixabay.com/api/';\r\n//     const API_KEY = '21793767-b218360da72fb262d25a858fe';\r\n//     const PER_PAGE = 12;\r\n//     return axios\r\n//         .get(\r\n//         `${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=\r\n// //                       ${currentPage}&key=${API_KEY}&per_page=${PER_PAGE}`\r\n//     )\r\n//     .then(response =>response.data.hits)\r\n// }\r\n\r\n// export default fetchHits;\r\n\r\nimport axios from 'axios';\r\n\r\nconst fetchHits = ({ searchQuery = '', currentPage = 1 }) => {\r\n    return axios\r\n        .get(\r\n            `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=21793767-b218360da72fb262d25a858fe&image_type=photo&orientation=horizontal&per_page=12`,\r\n        )\r\n        .then(response =>response.data.hits)\r\n}\r\n\r\nexport default fetchHits;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport '../../style.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        console.log('Modal componentDidMount');\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('Modal componentWillUnmount');\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n            if (e.code === 'Escape') {\r\n                console.log('Нажали Esc, нужно закрить модалку');\r\n                this.props.onClose();\r\n            }\r\n        }\r\n\r\n    handleBackdropClick = e => {\r\n        // console.log('Кликнули в бекдроп');\r\n        // console.log('currentTarget:', e.currentTarget);\r\n        // console.log('target:', e.target)\r\n\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n            <div className=\"Modal\">{this.props.children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\n// import { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar'\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from './components/Button'\nimport Loader from './components/Loader'\nimport searchApi from './searchApi'\nimport Modal from './components/Modal'\n\nexport default function App() {\n  const [hits, setHits] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [tags, setTags] = useState('');\n  const [largeImageURL, setLargeImageURL] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const options = { searchQuery, currentPage };\n    \n    if (searchQuery==='') {\n      return;\n    };\n    \n    setIsLoading(true);\n\n    searchApi(options)\n      .then(hits => {\n        setHits((prevState) => [...prevState, ...hits])\n        // setCurrentPage(currentPage=>currentPage + 1)\n      }\n      )\n      .catch(() => setError('Sorry! Picture not found. Please try again later!!!' ))\n      .finally(() => setIsLoading(false));\n  },\n    [searchQuery, currentPage]);\n  \n  const toogleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const onOpenModal = (largeImageURL = '') => {\n    setLargeImageURL( largeImageURL );\n    setTags(tags);\n    toogleModal();\n  };\n  \n  const handleSearchSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setCurrentPage(1);\n    setHits([]);\n    setError(null);\n  }\n\n  const loadMore = () => {\n    setCurrentPage(currentPage=>currentPage + 1);\n  }\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n\n        return ( \n          <>\n            <Searchbar onSubmit={handleSearchSubmit} />\n            {error && <h2>{error}</h2>}\n            <ImageGallery hits={hits} onOpenModal={onOpenModal}/>\n                \n            {isLoading && <Loader />}\n\n            {hits.length > 11 && !isLoading && (\n            <Button onClick={loadMore} />\n            )}\n          \n            {showModal && (\n            <Modal onClose = {toogleModal}>\n                <img src={largeImageURL} alt={tags} />\n            </Modal> \n              )\n             }\n          </>\n        )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}