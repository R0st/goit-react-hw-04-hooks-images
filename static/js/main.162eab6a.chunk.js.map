{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","searchApi.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","trim","props","onSubmit","alert","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","onClick","tags","src","alt","ImageGallery","hits","onOpenModal","map","id","largeImageURL","Button","LoaderSpin","color","height","width","timeout","fetchHits","searchQuery","currentPage","axios","get","then","response","data","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","isLoading","error","showModal","toogleModal","handleSearchSubmit","options","searchApi","prevState","catch","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.162eab6a.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { ImSearch } from 'react-icon/im';\r\n\r\nexport default class Searchbar extends Component {\r\n    static propTypes = {\r\n        query: PropTypes.string,\r\n    };\r\n    \r\n    state = {\r\n        query: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ query: e.currentTarget.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.query.trim() === '') {\r\n            alert('Введите название картинки');\r\n            return;\r\n        } \r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({ query: '' });\r\n    };\r\n\r\n    render() {\r\n        const { query } = this.state;\r\n        return (\r\n            <header className=\"Searchbar\" >\r\n                <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={query}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nexport default function ImageGalleryItem({ webformatURL, onClick, tags }) {\r\n    return (\r\n        <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            className=\"ImageGalleryItem-image\"\r\n            onClick={onClick}\r\n    />\r\n    )}\r\n        \r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nconst ImageGallery = ({ hits, onOpenModal }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {hits.map(({ id, webformatURL, largeImageURL }) => {\r\n                const handleImgClick = () => onOpenModal(largeImageURL);\r\n                return (\r\n                    <li key={id}>\r\n                        <ImageGalleryItem\r\n                            key={id}\r\n                            webformatURL={webformatURL}\r\n                            onClick={handleImgClick}\r\n                        />\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    hits: PropTypes.array.isRequired,\r\n    onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","// import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import style from './Button.module.css'\r\n\r\n// const Button = ({ children, onClick, ...allyProps }) => {\r\n//     <button\r\n//         type='button'\r\n//         className={style.Button}\r\n//         onClick={onClick} {...allyProps}\r\n//     >\r\n//         {children}\r\n//     </button>\r\n// };\r\n\r\n// Button.defaultProps = {\r\n//     onClick: () => null,\r\n//     children: null,\r\n// };\r\n\r\n// Button.propTypes = {\r\n//     onClick: PropTypes.func,\r\n//     children: PropTypes.node,\r\n//     'aria-label': PropTypes.string.isRequired,\r\n// };\r\n\r\n// export default Button;\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../style.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\r\n        Load more\r\n    </button>\r\n    );\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst LoaderSpin = () => (\r\n    <Loader\r\n        type=\"Bars\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n    />\r\n)\r\n\r\nexport default LoaderSpin;\r\n","// import searchApi from '../components/searchApi' \r\n\r\n// function fetchImg({ searchQuery = \"\", currentPage = 1 }) {\r\n\r\n        // const BASE_URL = 'https://pixabay.com/api/';\r\n        // const API_KEY = '21793767-b218360da72fb262d25a858fe';\r\n        // const PER_PAGE = 12;\r\n    \r\n//     return fetch(`${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=\r\n//                       ${currentPage}&per_page=${PER_PAGE}&key=${API_KEY}`)\r\n                \r\n//                 .then(response => {\r\n//                     if (response.ok) {\r\n//                         return response.json()\r\n//                     }\r\n//                     return Promise.reject(\r\n//                         new Error(`Повторите запрос ${searchQuery}`))\r\n//                 })\r\n// }\r\n// const api = {\r\n//     fetchImg}\r\n// export default  api ;\r\n// export default { fetchImg } ;\r\n\r\n// import axios from 'axios';\r\n\r\n// const fetchHits = ({ searchQuery = '', currentPage = 1 }) => {\r\n//     const BASE_URL = 'https://pixabay.com/api/';\r\n//     const API_KEY = '21793767-b218360da72fb262d25a858fe';\r\n//     const PER_PAGE = 12;\r\n//     return axios\r\n//         .get(\r\n//         `${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchQuery}&page=\r\n// //                       ${currentPage}&key=${API_KEY}&per_page=${PER_PAGE}`\r\n//     )\r\n//     .then(response =>response.data.hits)\r\n// }\r\n\r\n// export default fetchHits;\r\n\r\nimport axios from 'axios';\r\n\r\nconst fetchHits = ({ searchQuery = '', currentPage = 1 }) => {\r\n    return axios\r\n        .get(\r\n            `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=21793767-b218360da72fb262d25a858fe&image_type=photo&orientation=horizontal&per_page=12`,\r\n        )\r\n        .then(response =>response.data.hits)\r\n}\r\n\r\nexport default fetchHits;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport '../../style.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        console.log('Modal componentDidMount');\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('Modal componentWillUnmount');\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n            if (e.code === 'Escape') {\r\n                console.log('Нажали Esc, нужно закрить модалку');\r\n                this.props.onClose();\r\n            }\r\n        }\r\n\r\n    handleBackdropClick = e => {\r\n        // console.log('Кликнули в бекдроп');\r\n        // console.log('currentTarget:', e.currentTarget);\r\n        // console.log('target:', e.target)\r\n\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n            <div className=\"Modal\">{this.props.children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\n","import { Component } from \"react\";\n// import { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar'\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from './components/Button'\nimport Loader from './components/Loader'\nimport searchApi from './searchApi'\nimport Modal from './components/Modal'\nimport PropTypes from 'prop-types';\n\n\nexport default class App extends Component {\n   static propTypes = {\n        hits: PropTypes.array,\n        searchQuery: PropTypes.string,\n        currentPage: PropTypes.number,\n        isLoading: PropTypes.bool,\n        showModal: PropTypes.bool,\n        largeImageURL: PropTypes.string,\n        tags: PropTypes.string,\n        error: PropTypes.string,\n  }\n    state = {\n        hits: [],\n        searchQuery: '',\n        currentPage: 1,\n        isLoading: false,\n        error: null,\n        showModal: false,\n        largeImageURL: '',\n        tags: '',\n    }\n\n    toogleModal = () => {\n        this.setState(({ showModal }) => ({\n        showModal: !showModal,\n        }));\n    };\n\n    onOpenModal = (largeImageURL = '') => {\n        this.setState({ largeImageURL });\n        this.toogleModal();\n    };\n  \n    handleSearchSubmit = query => {\n        this.setState({\n            searchQuery: query,\n            currentPage: 1,\n            hits: [],\n            error: null,\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.searchQuery !== this.state.searchQuery) {\n        this.fetchHits();\n        }\n        if (this.state.searchQuery !== 2 && prevState.currentPage !== this.state.currentPage) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    };\n    }\n\n    // onChangeQuery = query => {\n    //     this.setState({\n    //     searchQuery: query,\n    //     currentPage: 1,\n    //     articles: [],\n    //     error: null,\n    //     });\n    // };\n\n    // fetchHits = () => {\n    //     const { currentPage, searchQuery } = this.state;\n    //     const options = { searchQuery, currentPage };\n\n    //     this.setState({ isLoading: true });\n\n    //    searchApi\n    //     .fetchHits(options)\n    //     .then(hits => {\n    //         this.setState(prevState => ({\n    //         hits: [...prevState.hits, ...hits],\n    //         currentPage: prevState.currentPage + 1,\n    //         }));\n    //     })\n    //     .catch(error => this.setState({ error }))\n    //     .finally(() => this.setState({ isLoading: false }));\n    // };\n\n    fetchHits = () => {\n    const { searchQuery, currentPage } = this.state;\n\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    this.setState({ isLoading: true });\n\n    searchApi(options)\n      .then(hits => {\n        this.setState(prevState => ({\n          hits: [...prevState.hits, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error: 'Sorry! Picture not found. Please try again later!!!' }))\n      .finally(() => this.setState({ isLoading: false }));\n  }\n\n    render() {\n        const { hits, isLoading, showModal,largeImageURL,tags } = this.state;\n        return (\n             <>   \n                <Searchbar onSubmit={this.handleSearchSubmit} />\n                <ImageGallery hits={hits}  onOpenModal={this.onOpenModal} />\n                \n                {isLoading && <Loader />}\n\n                {hits.length > 11 && !isLoading && (\n                <Button onClick={this.fetchHits} />\n                )}\n          \n                {showModal && (\n                <Modal onClose = {this.onOpenModal}>\n                <img src={largeImageURL} alt={tags} />\n            {/* <button type=\"button\" onClick={this.toogleModal}>Close</button> */}\n                </Modal>\n                    )   \n                }\n            </>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}